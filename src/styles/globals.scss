@import "./variables.scss";

*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  font-family: $textFont, "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-size: $fontSize-md;
  font-weight: 400;
}

a {
  color: inherit;
}

h1 {
  font-family: $titleFont;
  font-size: $fontSize-xl;
  font-weight: 800;
}

h2 {
  font-family: $titleFont;
  font-size: $fontSize-lg;
  line-height: 1.1em;
  font-weight: 800;
}

h3 {
  font-family: $titleFont;
  font-size: $fontSize-md;
  font-weight: 600;
}

ul {
  margin: 2em 1em;
  li {
    font-family: $textFont;
    font-size: $fontSize-md;
    font-weight: 300;
    margin: 0.4em 0;
  }
}

.link {
  cursor: pointer;
}

.link:hover {
  color: $secondaryColor;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.coloredSeparator {
  background: linear-gradient(135deg, $yellowColor 0%, $secondaryColor 100%);
  height: 10px;
  width: 100%;
}

.lightSeparator {
  background: linear-gradient(135deg, $yellowColor 0%, $secondaryColor 100%);
  height: 4px;
  width: 100%;
}

.smallLightSeparator {
  background: linear-gradient(135deg, $yellowColor 0%, $secondaryColor 100%);
  height: 2px;
  width: 40%;
  margin: 0 auto;
}

.textLink {
  color: $secondaryColor;
  font-family: $textFont;
  font-size: $fontSize-md;
  line-height: 2em;
  cursor: pointer;
  font-weight: 600;
}

.mt5 {
  margin-top: 1.5em;
}

.mt-large {
  margin-top: 3.5em;
}

.mr5 {
  margin-right: 0.5em;
}

.pv5 {
  padding: 0 1em;
}

blockquote {
  font-family: $textFont;
  font-size: $fontSize-md;
  font-weight: 300;
  margin: 1em 0;
  padding: 0 1em;
  border-left: 3px solid $secondaryColor;
}

.editor {
  position: relative;

  .heartIcon {
    position: absolute;
    top: 0.85em;
    left: 1.1em;
    stroke: none;
    fill: $primaryColor;
  }
}

.signinContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 2em 0 0 0;
  padding: 1em;
  background-color: $lightColor;
  cursor: pointer;
}
.rollerColoredIcon {
  fill: white;
  stroke: $secondaryColor;
  margin-right: 0.5em;
}

.inputContainer {
  margin: 0.25em 0;
  position: relative;

  .displayPassword {
    position: absolute;
    top: 3.35em;
    right: 0.6em;
    cursor: pointer;
    stroke: $greyColor;
  }
}

.input {
  background-color: white;
  border: 2px solid $greyColor;
  border-radius: 5px;
  font-size: $fontSize-md;
  font-family: $textFont;
  padding: 0.4em;
  transition: 180ms box-shadow ease-in-out;
  width: 100%;

  &.error {
    border: 1px solid $redColor;
  }
}

.input:focus {
  border-color: $secondaryColor;
  outline: 3px solid transparent;
}

.required {
  color: $secondaryColor;
  margin: 1.4em 0.3em 0 0;
}

// .input:not(textarea) {
//   line-height: 1;
//   height: 2.25rem;
// }

input[type="file"] {
  display: none;
}

.registerFileInput {
  cursor: pointer;
  margin: 0 0 0 0.7em;

  .fileInputIcon {
    stroke: white;
  }
}

textarea.input {
  resize: vertical;
}

.input[readonly] {
  border-style: dotted;
  cursor: not-allowed;
  color: $greyColor;
}

.input[disabled] {
  --input-border: #ccc;
  background-color: #eee;
  cursor: not-allowed;
}

select {
  appearance: none;
  background-color: transparent;
  border: none;
  padding: 0.2em 0;
  // margin: 0;
  width: 100%;
  font-family: $textFont;
  font-size: $fontSize-md;
  cursor: inherit;
  line-height: inherit;
  z-index: 1;

  &::-ms-expand {
    display: none;
  }

  outline: none;
}

.selectFilter {
  display: grid;
  grid-template-areas: "select";
  align-items: center;
  position: relative;

  select,
  &::after {
    grid-area: select;
  }

  width: 100%;

  border: 1px solid $greyColor;
  border-radius: 5px;
  padding: 0em 0.4em;

  font-size: $fontSize-md;
  color: $greyColor;
  cursor: pointer;

  background-color: #fff;

  &:not(.select--multiple)::after {
    content: "";
    justify-self: end;
    width: 0.8em;
    height: 0.5em;
    background-color: $secondaryColor;
    clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  }
}

.select {
  display: grid;
  grid-template-areas: "select";
  align-items: center;
  position: relative;

  select,
  &::after {
    grid-area: select;
  }

  width: 100%;

  border: 2px solid $greyColor;
  border-radius: 5px;
  padding: 0.25em 0.5em;

  font-size: $fontSize-md;
  cursor: pointer;

  background-color: #fff;
  background-image: linear-gradient(to top, #f9f9f9, #fff 33%);

  &:not(.select--multiple)::after {
    content: "";
    justify-self: end;
    width: 0.8em;
    height: 0.5em;
    background-color: $greyColor;
    clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  }
}

// Interim solution until :focus-within has better support
select:focus + .focus {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid $primaryColor;
  border-radius: inherit;
}

// select[multiple] {
//   padding-right: 0;
//   height: 6rem;

//   option {
//     white-space: normal;

//     // Only affects Chrome
//     outline-color: $primaryColor;
//   }
// }

label {
  color: darken($color: $greyColor, $amount: 20);
  font-family: $textFont;
  font-size: $fontSize-sm;
  letter-spacing: 0.2px;
  margin: 1.5em 0 0.3em 0;
  display: block;
}

.my-masonry-grid {
  display: -webkit-box; /* Not needed if autoprefixing */
  display: -ms-flexbox; /* Not needed if autoprefixing */
  display: flex;
  margin-left: -20px; /* gutter size offset */
  width: auto;
}
.my-masonry-grid_column {
  padding-left: 24px; /* gutter size */
  background-clip: padding-box;
}

.ql-toolbar.ql-snow {
  // text-align: center;
  padding: 10px !important;
}

.ql-editor {
  min-height: 8em;
}

.quill {
  border: solid 2px $greyColor;
  border-radius: 5px;
}

.ql-toolbar.ql-snow {
  border: none !important;
  border-bottom: solid 1px $greyColor !important;
}

.ql-container {
  border: none !important;
  padding: 0;
}

.flexStart {
  display: flex;
  justify-content: flex-start;
  gap: 10;
  flex-wrap: wrap;
}

.imageAndPinIcons {
  display: flex;
  justify-content: space-between;
  flex-wrap: nowrap;
  align-items: center;
  padding: 2em 0 0 1em;
  .fileInputIcon {
    cursor: pointer;
    stroke: $secondaryColor;
    margin-top: 0.45em;
  }
  .fileInputIcon:hover {
    stroke: $blueColor;
  }

  .newPostPinIcon {
    stroke: $blueColor;
    cursor: pointer;
    margin: 1.1em 0 0 0.5em;
  }
  .newPostPinIcon:hover {
    stroke: $secondaryColor;
  }
}

.badge {
  border-radius: 5px;
  color: white;
  font-family: $titleFont;
  font-size: $fontSize-sm;
  margin: 0.5em 0.3em 0.5em 0;
  padding: 2px 8px 1px 8px;
  width: fit-content;
  cursor: pointer;

  &.blue {
    background-color: $blueColor;
    border: solid 2px $blueColor;
  }
  &.pink {
    background-color: $secondaryColor;
    border: solid 2px $secondaryColor;
  }
  &.yellow {
    background-color: $yellowColor;
    border: solid 2px $yellowColor;
  }
  &.green {
    background-color: $greenColor;
    border: solid 2px $greenColor;
  }
  &.dark {
    background-color: $darkColor;
    border: solid 2px $darkColor;
  }
  &.grey {
    background-color: $greyColor;
    border: solid 2px $greyColor;
  }
  &.purple {
    background-color: $purpleColor;
    border: solid 2px $purpleColor;
  }
}

.badge:hover {
  background-color: white;

  &.blue {
    color: $blueColor;
    border: solid 2px $blueColor;
  }
  &.pink {
    color: $secondaryColor;
    border: solid 2px $secondaryColor;
  }
  &.yellow {
    color: $yellowColor;
    border: solid 2px $yellowColor;
  }
  &.green {
    color: $greenColor;
    border: solid 2px $greenColor;
  }
  &.dark {
    color: $darkColor;
    border: solid 2px $darkColor;
  }
  &.grey {
    border: solid 2px darken($color: $lightColor, $amount: 20);
    color: darken($color: $lightColor, $amount: 30);
  }
  &.purple {
    color: $purpleColor;
    border: solid 2px $purpleColor;
  }
}

.outlineBadge {
  background-color: white;
  border-radius: 5px;
  font-family: $titleFont;
  font-size: $fontSize-sm;
  margin: 0.5em 0.3em 0.5em 0;
  padding: 2px 8px 1px 8px;
  width: fit-content;
  cursor: pointer;

  &.blue {
    border: solid 2px $blueColor;
    color: $blueColor;
  }
  &.pink {
    border: solid 2px $secondaryColor;
    color: $secondaryColor;
  }
  &.yellow {
    border: solid 2px $yellowColor;
    color: $yellowColor;
  }
  &.green {
    border: solid 2px $greenColor;
    color: $greenColor;
  }
  &.dark {
    border: solid 2px $darkColor;
    color: $darkColor;
  }
  &.grey {
    border: solid 2px $greyColor;
    color: lighten($color: $greyColor, $amount: 10);
  }
  &.purple {
    color: $purpleColor;
    border: solid 2px $purpleColor;
  }
}

.outlineBadge:hover {
  color: white;

  &.blue {
    border: solid 2px $blueColor;
    background-color: $blueColor;
  }
  &.pink {
    border: solid 2px $secondaryColor;
    background-color: $secondaryColor;
  }
  &.yellow {
    border: solid 2px $yellowColor;
    background-color: $yellowColor;
  }
  &.green {
    border: solid 2px $greenColor;
    background-color: $greenColor;
  }
  &.dark {
    border: solid 2px $darkColor;
    background-color: $darkColor;
  }
  &.grey {
    border: solid 2px $greyColor;
    background-color: $greyColor;
  }
  &.purple {
    background-color: $purpleColor;
    border: solid 2px $purpleColor;
  }
}

.staticBadge {
  border-radius: 5px;
  color: white;
  font-family: $titleFont;
  font-size: $fontSize-sm;
  margin: 0.5em 0.2em 0.5em 0;
  padding: 2px 8px 1px 8px;
  width: fit-content;

  &.blue {
    background-color: $blueColor;
    border: solid 2px $blueColor;
  }
  &.pink {
    background-color: $secondaryColor;
    border: solid 2px $secondaryColor;
  }
  &.yellow {
    background-color: $yellowColor;
    border: solid 2px $yellowColor;
  }
  &.green {
    background-color: $greenColor;
    border: solid 2px $greenColor;
  }
  &.dark {
    background-color: $darkColor;
    border: solid 2px $darkColor;
  }
  &.purple {
    background-color: $purpleColor;
    border: solid 2px $purpleColor;
  }
}

.staticOutlineBadge {
  background-color: white;
  border-radius: 5px;
  font-family: $titleFont;
  font-size: $fontSize-sm;
  margin: 0.2em 0.2em 0.5em 0;
  padding: 1px 7px;
  width: fit-content;

  &.blue {
    border: solid 2px $blueColor;
    color: $blueColor;
  }
  &.pink {
    border: solid 2px $secondaryColor;
    color: $secondaryColor;
  }
  &.yellow {
    border: solid 2px $yellowColor;
    color: $yellowColor;
  }
  &.green {
    border: solid 2px $greenColor;
    color: $greenColor;
  }
  &.dark {
    border: solid 2px $darkColor;
    color: $darkColor;
  }
  &.grey {
    border: solid 2px $greyColor;
    color: $greyColor;
  }
  &.purple {
    color: $purpleColor;
    border: solid 2px $purpleColor;
  }
}

.mapContainer {
  display: block;
  width: 100%;
  height: 350px;
  margin-top: 1.5em;
}

.loader {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: inline-block;
  border-top: 4px solid $primaryColor;
  border-right: 4px solid transparent;
  box-sizing: border-box;
  animation: rotation 1s linear infinite;
}
.loader::after {
  content: "";
  box-sizing: border-box;
  position: absolute;
  left: 0;
  top: 0;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  border-left: 4px solid $secondaryColor;
  border-bottom: 4px solid transparent;
  animation: rotation 0.5s linear infinite reverse;
}
@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
