@import "./variables.scss";

*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  font-family: $textFont, "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-size: $fontSize-md;
  font-weight: 300;
}

a {
  color: inherit;
  text-decoration: none;
}

ul {
  margin: 2em 1em;
  li {
    font-family: $textFont;
    font-size: $fontSize-md;
    font-weight: 300;
    margin: 0.4em 0;
  }
}

.coloredSeparator {
  background: linear-gradient(135deg, $yellowColor 0%, $secondaryColor 100%);
  height: 10px;
  width: 100%;
}

.registerInput {
  background-color: white;
  border: none;
  border-radius: 7px;
  font-size: $fontSize-md;
  font-family: $textFont;
  padding: 0.7em;
  transition: 180ms box-shadow ease-in-out;
  width: 100%;
  margin: 0 0 0.75em 0;

  &.error {
    border: 2px solid $primaryColor;
  }
}

.input {
  background-color: white;
  border: 2px solid $greyColor;
  border-radius: 4px;
  font-size: $fontSize-md;
  font-family: $textFont;
  padding: 0.5em;
  transition: 180ms box-shadow ease-in-out;
  width: 100%;

  &.error {
    border: 2px solid $primaryColor;
  }
}

.input:focus {
  border-color: $primaryColor;
  outline: 3px solid transparent;
}

// .input:not(textarea) {
//   line-height: 1;
//   height: 2.25rem;
// }

input[type="file"] {
  display: none;
}

.flowFileInput {
  cursor: pointer;
  margin: 2em 0.5em 0 0.75em;

  .fileInputIcon {
    stroke: $secondaryColor;
  }
}

.registerFileInput {
  cursor: pointer;
  margin: 0 0 0 0.7em;

  .fileInputIcon {
    stroke: white;
  }
}

.newPostPinIcon {
  margin: 1.4em 0 0 0;
  stroke: $blueColor;
}

textarea.input {
  resize: vertical;
}

.input[readonly] {
  border-style: dotted;
  cursor: not-allowed;
  color: $greyColor;
}

.input[disabled] {
  --input-border: #ccc;
  background-color: #eee;
  cursor: not-allowed;
}

select {
  appearance: none;
  background-color: transparent;
  border: none;
  padding: 0.2em 0;
  // margin: 0;
  width: 100%;
  font-family: $textFont;
  font-size: $fontSize-md;
  cursor: inherit;
  line-height: inherit;
  z-index: 1;

  &::-ms-expand {
    display: none;
  }

  outline: none;
}

.select {
  display: grid;
  grid-template-areas: "select";
  align-items: center;
  position: relative;

  select,
  &::after {
    grid-area: select;
  }

  width: 100%;

  border: 2px solid $greyColor;
  border-radius: 0.25em;
  padding: 0.25em 0.5em;

  font-size: $fontSize-md;
  cursor: pointer;

  background-color: #fff;
  background-image: linear-gradient(to top, #f9f9f9, #fff 33%);

  &:not(.select--multiple)::after {
    content: "";
    justify-self: end;
    width: 0.8em;
    height: 0.5em;
    background-color: $greyColor;
    clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  }
}

// Interim solution until :focus-within has better support
select:focus + .focus {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid $primaryColor;
  border-radius: inherit;
}

// select[multiple] {
//   padding-right: 0;
//   height: 6rem;

//   option {
//     white-space: normal;

//     // Only affects Chrome
//     outline-color: $primaryColor;
//   }
// }

label {
  color: $greyColor;
  font-family: $textFont;
  font-size: $fontSize-sm;
  letter-spacing: 0.2px;
  margin-top: 1.2em;
  display: block;
}

.my-masonry-grid {
  display: -webkit-box; /* Not needed if autoprefixing */
  display: -ms-flexbox; /* Not needed if autoprefixing */
  display: flex;
  margin-left: -30px; /* gutter size offset */
  width: auto;
}
.my-masonry-grid_column {
  padding-left: 30px; /* gutter size */
  background-clip: padding-box;
}

.ql-toolbar.ql-snow {
  // text-align: center;
  padding: 10px !important;
}

.ql-editor {
  min-height: 8em;
}

.quill {
  border: solid 2px $greyColor;
  border-radius: 7px;
}

.ql-toolbar.ql-snow {
  border: none !important;
  border-bottom: solid 1px $greyColor !important;
}

.ql-container {
  border: none !important;
}

.flexStart {
  display: flex;
  justify-content: flex-start;
  gap: 10;
  flex-wrap: wrap;
}

.flexStartNoWrap {
  display: flex;
  justify-content: flex-start;
  gap: 10;
  flex-wrap: nowrap;
}

.badge {
  border-radius: 8px;
  color: white;
  font-family: $titleFont;
  font-size: $fontSize-sm;
  margin: 0.5em 0.2em 0.5em 0;
  padding: 2px 8px 1px 8px;
  width: fit-content;

  &.blue {
    background-color: $blueColor;
    border: solid 2px $blueColor;
  }
  &.pink {
    background-color: $secondaryColor;
    border: solid 2px $secondaryColor;
  }
  &.yellow {
    background-color: $yellowColor;
    border: solid 2px $yellowColor;
  }
  &.green {
    background-color: $greenColor;
    border: solid 2px $greenColor;
  }
  &.dark {
    background-color: $primaryColor;
    border: solid 2px $primaryColor;
  }
}

.outlineBadge {
  background-color: width;
  border-radius: 8px;
  font-family: $titleFont;
  font-size: $fontSize-sm;
  margin: 0.5em 0.2em 0.5em 0;
  padding: 2px 8px 1px 8px;
  width: fit-content;

  &.blue {
    border: solid 2px $blueColor;
    color: $blueColor;
  }
  &.pink {
    border: solid 2px $secondaryColor;
    color: $secondaryColor;
  }
  &.yellow {
    border: solid 2px $yellowColor;
    color: $yellowColor;
  }
  &.green {
    border: solid 2px $greenColor;
    color: $greenColor;
  }
  &.dark {
    border: solid 2px $primaryColor;
    color: $primaryColor;
  }
  &.grey {
    border: solid 2px $greyColor;
    color: $greyColor;
    cursor: pointer;
  }
}

.mapContainer {
  display: block;
  width: 100%;
  height: 350px;
  margin-top: 1.5em;
}
